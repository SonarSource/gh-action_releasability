# yamllint disable rule:line-length
---
name: Releasability status
description: Run releasability checks and update commit status
inputs:
  optional_checks:
    description: 'Comma separated list of checks to ignore in case of failure'
    required: false
    default: ''
runs:
  using: "composite"
  steps:
    - id: setup_python
      name: Setup python
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
      with:
        python-version: "3.10"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@4fc4975a852c8cd99761e2de1f4ba73402e44dd9 # v4.0.3
      with:
        aws-region: eu-central-1
        role-to-assume: "arn:aws:iam::064493320159:role/ReleasbilityChecksCICDRole"

    - name: Install requirements
      run: pip install pipenv
      shell: bash

    # Find latest promoted version from the commit status
    - id: find_version
      shell: bash
      working-directory: ${{ github.action_path }}
      run: |
        ./find_version.sh

    - name: Trigger releasability checks
      id: checks
      shell: bash
      working-directory: ${{ github.action_path }}/../
      run: |
        pipenv install --deploy
        pipenv run releasability
      env:
        INPUT_ORGANIZATION: ${{ github.repository_owner }}
        INPUT_REPOSITORY: ${{ github.event.repository.name }}
        INPUT_BRANCH: ${{ github.ref_name }}
        INPUT_VERSION: ${{ steps.find_version.outputs.version }}
        INPUT_COMMIT_SHA: ${{ github.sha }}
        PYTHONUNBUFFERED: "1" # that way logs are printed live

    - name: Parse Releasability check output
      id: parse-releasability
      if: always()
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        INPUT_VERSION: ${{ steps.find_version.outputs.version }}
        RELEASABILITY_CHECK_RESULT: ${{ toJSON(steps.checks.outputs) }}
        OPTIONAL_CHECKS: ${{ inputs.optional_checks }}
      run: |
        pipenv install
        pipenv run releasability-status

    - name: Print results
      env:
        LOGS_OUTPUT: ${{ steps.checks.outputs.logs }}
        EXIT_CODE: ${{ steps.parse-releasability.outputs.status }}
        MESSAGE_OUTPUT: ${{ steps.parse-releasability.outputs.message }}
      run: |
        echo "Releasability Check Results:"
        echo "=========================="
        echo "$LOGS_OUTPUT"
        echo "Exit code: $EXIT_CODE"
        echo "Message: $MESSAGE_OUTPUT"
        echo "=========================="
      shell: bash

    - uses: octokit/request-action@dad4362715b7fb2ddedf9772c8670824af564f0d # v2.4.0
      name: Update Commit status to success
      with:
        route: 'POST /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/statuses/${{ github.sha }}'
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        INPUT_STATE: "${{ steps.parse-releasability.outputs.state }}"
        INPUT_TARGET_URL: "https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/actions/runs/${{ github.run_id }}"
        INPUT_DESCRIPTION: "${{ steps.parse-releasability.outputs.message }}"
        INPUT_CONTEXT: "Releasability"
